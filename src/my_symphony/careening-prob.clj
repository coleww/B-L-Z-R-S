(ns my-symphony.careening-prob)

(def pieces {:probs [
                     (vec (take 16 (cycle [1 0 0 0])))
                     [1 1 1 0 1 1 0 0 1 1 1 0 1 1 0 0]
                     [1 0.1 1 0.1 1 0.1 1 0.1 1 0.1 1 0.1 1 0.1 1 0.1]
                     [1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0]
                     [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]]
             :notes [
                     (vec (map-indexed #(vector (-  %1 %2)) (take 16 (cycle [3 3 7 7]))))
                     [[7] [7] [9] [9] [3] [3] [1] [3]
                      [5] [5] [7] [9] [4] [4] [2] [6]]
                     [[-7 7 9] [0 -7] [7 9] [0 -7] [5] [3 -5] [5] [3 -5]
                      [5 -3] [5 -3] [5 -3] [5 -3] [7 -7] [9 -7] [9 -7] [7 -7]]
                     [[1] [1] [1] [1] [3] [3] [3] [3]
                      [5] [5] [5] [5] [7] [7] [7] [7]]
                     [[1] [8] [1] [8] [3] [11] [3] [11]
                      [5] [12] [5] [12] [7] [14] [7] [14]]]
             :index 4})

(def beeps {:probs [
                    (vec (take 16 (cycle [0 0 0 0])))
                    [1 0.1 1 1 0.1 1 1 0.1 1 1 1 0.1 1 0.1 1 1]
                    [0.75 0.5 0.75 0.5 0.75 0.5 0.75 0.5 0.75 0.5 0.75 0.5 0.75 0.5 0.75 0.5]
                    [1 0.75 1 0 1 0.75 1 0 1 0.75 1 0 1 0.75 1 0]
                    (vec (take 16 (cycle [1 1 1 0])))]
            :notes [
                    (vec (map-indexed #(vector (-  %1 %2)) (take 16 (cycle [5 5 5 5]))))
                    [[7] [3] [7] [12] [9] [9] [9] [7]
                     [5] [3] [5] [7] [9] [ 5] [0] [3]]
                    [[5 5 9] [9 5] [5 9 5] [9 5] [9 9 15] [9 15] [9 9 15] [9 15]
                     [9 6 0] [0 15 6] [6 9 0] [15 3 0] [9 9 6 15 15 15] [9 6 9 15 15 15] [9 9 6 0 0] [9 9 6 0]]
                    [[5] [5] [5] [1 8] [7] [7] [7] [3 8]
                     [9] [9] [9] [5 12] [12] [12] [12] [7 14]]
                    [[1 5 8] [1 5 8] [5] [5] [3 7 11] [3 7 11] [3] [3]
                     [5 8 12] [5 8 12] [5] [5] [7 8 0] [7 8 0] [0] [0]]]
            :index 3})

(def kicks {:probs [(vec (take 8 (cycle [0])))        ;0
                    [1 0 0 1 1 0 1 0]                  ;1
                    [1 1 0 1 1 1 0 1]                  ;2
                    [1 0 0 0 0 0 0 0]                  ;3
                    [0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5]] ;4
            :index 2})

(def snares {:probs [[0 0 0 0 0 0 0 0]
                     [0 0 0 0 0.25 0.5 0.75 0.5]
                     [0 0 0 0 0 1 0 0]]
             :index 1})

(def chats {:probs [[0 0 0 0 0 0 0 0 ]
                    [0.7 0.7 1 0.27 0.27 0.27 0.21 0.27]
                    [1 0 1 0 1 0 1 0]
                    [0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5]
                    (vec (take 8 (cycle [0 1 0.2 0.7])))
                    ]
            :index 1})

(def ohats {:probs [[0 0 0 0 0 0 0 0 0]
                    [1 0.5 1 0.5 1 0.5 1 0.5]
                    [0.25 0.5 0.25 0.5 0.5 0.5 0.5 0.5]
                    [0 1 0 1 0 1 0 1]
                    (vec (take 8 (cycle [0 0.2 0.7 1])))]
            :index 1})
(def crashes )
